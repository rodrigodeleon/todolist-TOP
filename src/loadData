import { format } from "date-fns";
import Project from "./project";
import ToDo from "./toDo";

function populateData() {
  //create projects/todos and loads them on localStorage
  let projects = [];
  let todos = [];

  const actions = [
    "Do dishes",
    "Paint house",
    "Brush teeth",
    "Drive kids",
    "Do groceries",
    "Clean sheets",
  ];

  actions.forEach((element) => {
    for (let index = 0; index < 2; index++) {
      const mytodo = new ToDo(
        element,
        element,
        randomDate(new Date(), new Date(2023, 9, 6)),
        "high"
      );
      todos.push(mytodo);
    }
  });

  const when = ["Today", "This Week", "This Month", "Next Month"];
  when.forEach((element) => {
    const myproj = new Project(element);
    todos.forEach((todo) => {
      myproj.addToDo(todo);
    });
    projects.push(myproj);
  });

  localStorage.setItem("projects", JSON.stringify(projects));
}

export function loadAllProjects() {
  populateData();
  const projects = JSON.parse(localStorage.getItem("projects"));
  const projectList = document.createElement("ul");
  projectList.classList.add("project");
  projects.forEach((project) => {
    const projectDiv = document.createElement("div");
    const todolist = document.createElement("ul");
    const projName = document.createElement("li");
    projName.textContent = project.name;
    projName.classList.add("projName");
    projectDiv.appendChild(projName);
    var myarray = project["toDoList"];
    project["toDoList"].forEach((element) => {
      const todo = document.createElement("li");
      todo.textContent = element.title.toUpperCase() + " Due Date: " + element.dueDate;
      todolist.append(todo);
    });
    projectDiv.appendChild(todolist);
    projectList.appendChild(projectDiv);
  });
  return projectList;
  //returns an ul with all projects and todos
}

// projectList.sort((a, b) => a.dueDate - b.dueDate);

function randomDate(start, end) {
  return new Date(
    start.getTime() + Math.random() * (end.getTime() - start.getTime())
  );
}
