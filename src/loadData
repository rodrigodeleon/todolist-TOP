import { format } from "date-fns";
import * as projects from "./project";
import Project from "./project";
import ToDo from "./toDo";
const content = document.querySelector("#content");
const actions = document.querySelector("#actions");

export function populateData() {
  //create projects/todos and loads them on localStorage
  let projects = [];
  let todos = [];

  const actions = [
    "Do dishes",
    "Paint house",
    "Brush teeth",
    "Drive kids",
    "Do groceries",
    "Clean sheets",
  ];

  actions.forEach((element) => {
    for (let index = 0; index < 2; index++) {
      const mytodo = new ToDo(
        element,
        element,
        randomDate(new Date(), new Date(2023, 9, 6)),
        "high"
      );
      todos.push(mytodo);
    }
  });

  const when = ["Today", "This Week", "This Month", "Next Month"];
  when.forEach((element) => {
    const myproj = new Project(element);
    todos.forEach((todo) => {
      myproj.addToDo(todo);
    });
    projects.push(myproj);
  });

  localStorage.setItem("projects", JSON.stringify(projects));
}
const allprojects = JSON.parse(localStorage.getItem("projects"));

export function loadMenu() {
  let projectSelector = document.createElement("select");
  projectSelector.setAttribute("id", "projectSelector");
  let option1 = document.createElement("option");
  option1.setAttribute("value", "all");
  option1.textContent = "All";
  projectSelector.appendChild(option1);
  allprojects.forEach((project) => {
    let optionX = document.createElement("option");
    optionX.setAttribute("value", project.name);
    optionX.classList.add('projectSelectorItem');
    optionX.textContent = project.name;
    projectSelector.appendChild(optionX);
  });

  projectSelector.addEventListener("change", function () {
    if (projectSelector.value == "all") {
      const myvar = JSON.parse(localStorage.getItem("projects"));

      loadProjects(myvar);
    } else {
      const selectedProject = projects.getProjectByName(projectSelector.value);
      loadProjects(selectedProject);
    }
  });
  actions.append('Projects: ' ,projectSelector);
  loadProjects(allprojects);
}

export function loadProjects(projects) {
  //returns an ul with all projects and its todos

  const projectList = document.createElement("ul");
  projectList.classList.add("project");
  projects.forEach((project) => {
    const projectDiv = document.createElement("div");
    const projName = document.createElement("li");
    projName.textContent = project.name;
    projName.classList.add("projName");
    projectDiv.appendChild(projName);
    var myarray = project["toDoList"];
    projectDiv.appendChild(loadTodos(myarray));
    projectList.appendChild(projectDiv);
  });
  content.innerHTML = "";
  content.append(projectList);
  return projectList;
}

function loadTodos(todoList) {
  // loads and print todo list of a project
  const todolist = document.createElement("ul");
  todolist.classList.add("todoList");
  todoList.forEach((element) => {
    const todo = document.createElement("li");
    todo.textContent =
      " Task: " + element.title.toUpperCase() + " Due Date: " + element.dueDate;
    const btnDetails = document.createElement("button");
    btnDetails.classList.add("btnDetails");
    btnDetails.setAttribute("id", todoList.indexOf(element));
    btnDetails.textContent = "Details";
    todo.appendChild(btnDetails);
    todolist.append(todo);
    btnDetails.addEventListener("click", function () {
      loadTodoDetail(
        element,
        this.parentNode.parentNode.previousSibling.textContent
      );
    });
  });
  return todolist;
}
function loadTodoDetail(todo, projectName) {
  // opens modal with todo detail and actions
  const modal = document.createElement("div");
  modal.classList.add("modal");
  modal.innerHTML = projectName;
  const closeButton = document.createElement("span");
  closeButton.classList.add("close");
  closeButton.innerHTML = "&times;";

  const modalText = document.createElement("ul");
  modalText.classList.add("modalText");
  Object.entries(todo).forEach((element) => {
    const line = document.createElement("li");
    line.classList.add("modalLine");
    line.textContent = `${element[0].toUpperCase()} : ${element[1]}`;
    modalText.append(line);
  });

  const deleteButton = document.createElement("span");
  deleteButton.classList.add("delete");
  deleteButton.innerHTML = "Delete Task";

  modal.append(modalText, deleteButton, closeButton);
  closeButton.addEventListener("click", function () {
    modal.style.display = "none";
  });

  deleteButton.addEventListener("click", function () {
    projects.deleteToDo(todo.title, projectName);
    projectSelector.value = projectName;
    loadProjects(projects.getProjectByName(projectName));
    modal.style.display = "none";
  });

  content.append(modal);
}

function randomDate(start, end) {
  return new Date(
    start.getTime() + Math.random() * (end.getTime() - start.getTime())
  );
}
